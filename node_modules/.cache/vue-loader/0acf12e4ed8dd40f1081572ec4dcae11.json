{"remainingRequest":"C:\\Users\\zhuhongxing\\Desktop\\dian\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\zhuhongxing\\Desktop\\dian\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\zhuhongxing\\Desktop\\dian\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\zhuhongxing\\Desktop\\dian\\src\\views\\info\\month\\index.vue?vue&type=template&id=4bf7d7bc&scoped=true&","dependencies":[{"path":"C:\\Users\\zhuhongxing\\Desktop\\dian\\src\\views\\info\\month\\index.vue","mtime":1636699500000},{"path":"C:\\Users\\zhuhongxing\\Desktop\\dian\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636699538000},{"path":"C:\\Users\\zhuhongxing\\Desktop\\dian\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1636699682000},{"path":"C:\\Users\\zhuhongxing\\Desktop\\dian\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636699538000},{"path":"C:\\Users\\zhuhongxing\\Desktop\\dian\\node_modules\\vue-loader\\lib\\index.js","mtime":1636699682000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}
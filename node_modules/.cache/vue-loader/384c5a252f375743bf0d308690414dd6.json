{"remainingRequest":"C:\\Users\\zhuhongxing\\Desktop\\dian\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\zhuhongxing\\Desktop\\dian\\src\\views\\system\\role\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\zhuhongxing\\Desktop\\dian\\src\\views\\system\\role\\index.vue","mtime":1636699500000},{"path":"C:\\Users\\zhuhongxing\\Desktop\\dian\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636699538000},{"path":"C:\\Users\\zhuhongxing\\Desktop\\dian\\node_modules\\babel-loader\\lib\\index.js","mtime":1636699524000},{"path":"C:\\Users\\zhuhongxing\\Desktop\\dian\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636699538000},{"path":"C:\\Users\\zhuhongxing\\Desktop\\dian\\node_modules\\vue-loader\\lib\\index.js","mtime":1636699682000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/system/role","sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <div class=\"top_search\">\r\n      <div class=\"search_title\">\r\n        <div class=\"line-title\"></div>查询条件\r\n      </div>\r\n      <el-form :model=\"queryParams\" ref=\"queryForm\" v-show=\"showSearch\" :inline=\"true\" label-width=\"100px\">\r\n        <el-form-item label=\"角色名称\" prop=\"roleName\">\r\n          <el-input v-model=\"queryParams.roleName\" placeholder=\"请输入角色名称\" clearable size=\"small\" style=\"width: 240px\"\r\n            @keyup.enter.native=\"handleQuery\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"权限字符\" prop=\"roleKey\">\r\n          <el-input v-model=\"queryParams.roleKey\" placeholder=\"请输入权限字符\" clearable size=\"small\" style=\"width: 240px\"\r\n            @keyup.enter.native=\"handleQuery\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"状态\" prop=\"status\">\r\n          <el-select v-model=\"queryParams.status\" placeholder=\"角色状态\" clearable size=\"small\" style=\"width: 240px\">\r\n            <el-option v-for=\"dict in statusOptions\" :key=\"dict.dictValue\" :label=\"dict.dictLabel\"\r\n              :value=\"dict.dictValue\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"创建时间\">\r\n          <el-date-picker v-model=\"dateRange\" size=\"small\" style=\"width: 240px\" value-format=\"yyyy-MM-dd\"\r\n            type=\"daterange\" range-separator=\"-\" start-placeholder=\"开始日期\" end-placeholder=\"结束日期\"></el-date-picker>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" icon=\"el-icon-search\" size=\"mini\" @click=\"handleQuery\">搜索</el-button>\r\n          <el-button icon=\"el-icon-refresh\" size=\"mini\" @click=\"resetQuery\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n\r\n    <div class=\"middle_table\">\r\n      <div class=\"table_btn\">\r\n        <div class=\"table_title\">\r\n          <div class=\"line-title\"></div>\r\n          角色管理列表\r\n        </div>\r\n        <el-row :gutter=\"10\" class=\"mb8\">\r\n          <el-col :span=\"1.5\">\r\n            <el-button type=\"primary\" plain icon=\"el-icon-plus\" size=\"mini\" @click=\"handleAdd\"\r\n              v-hasPermi=\"['system:role:add']\">新增</el-button>\r\n          </el-col>\r\n          <el-col :span=\"1.5\">\r\n            <el-button type=\"success\" plain icon=\"el-icon-edit\" size=\"mini\" :disabled=\"single\" @click=\"handleUpdate\"\r\n              v-hasPermi=\"['system:role:edit']\">修改</el-button>\r\n          </el-col>\r\n          <el-col :span=\"1.5\">\r\n            <el-button type=\"danger\" plain icon=\"el-icon-delete\" size=\"mini\" :disabled=\"multiple\" @click=\"handleDelete\"\r\n              v-hasPermi=\"['system:role:remove']\">删除</el-button>\r\n          </el-col>\r\n          <el-col :span=\"1.5\">\r\n            <el-button type=\"warning\" plain icon=\"el-icon-download\" size=\"mini\" :loading=\"exportLoading\"\r\n              @click=\"handleExport\" v-hasPermi=\"['system:role:export']\">导出</el-button>\r\n          </el-col>\r\n          <!-- <right-toolbar :showSearch.sync=\"showSearch\" @queryTable=\"getList\"></right-toolbar> -->\r\n        </el-row>\r\n\r\n      </div>\r\n      <el-table v-loading=\"loading\" :data=\"roleList\" @selection-change=\"handleSelectionChange\">\r\n        <el-table-column type=\"selection\" width=\"55\" align=\"center\" />\r\n        <el-table-column label=\"角色编号\" prop=\"roleId\" width=\"120\" />\r\n        <el-table-column label=\"角色名称\" prop=\"roleName\" :show-overflow-tooltip=\"true\" />\r\n        <el-table-column label=\"权限字符\" prop=\"roleKey\" :show-overflow-tooltip=\"true\"/>\r\n        <el-table-column label=\"显示顺序\" prop=\"roleSort\" width=\"100\" />\r\n        <el-table-column label=\"状态\" align=\"center\" width=\"100\">\r\n          <template slot-scope=\"scope\">\r\n            <el-switch v-model=\"scope.row.status\" active-value=\"0\" inactive-value=\"1\"\r\n              @change=\"handleStatusChange(scope.row)\"></el-switch>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"创建时间\" align=\"center\" prop=\"createTime\" width=\"160\">\r\n          <template slot-scope=\"scope\">\r\n            <span>{{ parseTime(scope.row.createTime) }}</span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" width=\"160px\" align=\"center\" fixed=\"right\" class-name=\"small-padding fixed-width\">\r\n          <template slot-scope=\"scope\" v-if=\"scope.row.roleId !== 1\">\r\n            <el-button size=\"mini\" type=\"text\" icon=\"el-icon-edit\" @click=\"handleUpdate(scope.row)\"\r\n              v-hasPermi=\"['system:role:edit']\">修改</el-button>\r\n            <el-button size=\"mini\" type=\"text\" icon=\"el-icon-delete\" @click=\"handleDelete(scope.row)\"\r\n              v-hasPermi=\"['system:role:remove']\">删除</el-button>\r\n            <el-dropdown size=\"mini\" @command=\"(command) => handleCommand(command, scope.row)\">\r\n              <span class=\"el-dropdown-link\">\r\n                <i class=\"el-icon-d-arrow-right el-icon--right\"></i>更多\r\n              </span>\r\n              <el-dropdown-menu slot=\"dropdown\">\r\n                <el-dropdown-item command=\"handleDataScope\" icon=\"el-icon-circle-check\"\r\n                  v-hasPermi=\"['system:role:edit']\">\r\n                  数据权限</el-dropdown-item>\r\n                <el-dropdown-item command=\"handleAuthUser\" icon=\"el-icon-user\" v-hasPermi=\"['system:role:edit']\">分配用户\r\n                </el-dropdown-item>\r\n              </el-dropdown-menu>\r\n            </el-dropdown>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"queryParams.pageNum\" :limit.sync=\"queryParams.pageSize\"\r\n        @pagination=\"getList\" />\r\n    </div>\r\n    <!-- 添加或修改角色配置对话框 -->\r\n    <el-dialog :title=\"title\" :visible.sync=\"open\" width=\"500px\" append-to-body>\r\n      <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"80px\">\r\n        <el-form-item label=\"角色名称\" prop=\"roleName\">\r\n          <el-input v-model=\"form.roleName\" placeholder=\"请输入角色名称\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"权限字符\" prop=\"roleKey\">\r\n          <el-input v-model=\"form.roleKey\" placeholder=\"请输入权限字符\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"角色顺序\" prop=\"roleSort\">\r\n          <el-input-number v-model=\"form.roleSort\" controls-position=\"right\" :min=\"0\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"状态\">\r\n          <el-radio-group v-model=\"form.status\">\r\n            <el-radio v-for=\"dict in statusOptions\" :key=\"dict.dictValue\" :label=\"dict.dictValue\">{{dict.dictLabel}}\r\n            </el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n        <el-form-item label=\"菜单权限\">\r\n          <el-checkbox v-model=\"menuExpand\" @change=\"handleCheckedTreeExpand($event, 'menu')\">展开/折叠</el-checkbox>\r\n          <el-checkbox v-model=\"menuNodeAll\" @change=\"handleCheckedTreeNodeAll($event, 'menu')\">全选/全不选</el-checkbox>\r\n          <el-checkbox v-model=\"form.menuCheckStrictly\" @change=\"handleCheckedTreeConnect($event, 'menu')\">父子联动\r\n          </el-checkbox>\r\n          <el-tree class=\"tree-border\" :data=\"menuOptions\" show-checkbox ref=\"menu\" node-key=\"id\"\r\n            :check-strictly=\"!form.menuCheckStrictly\" empty-text=\"加载中，请稍后\" :props=\"defaultProps\"></el-tree>\r\n        </el-form-item>\r\n        <el-form-item label=\"备注\">\r\n          <el-input v-model=\"form.remark\" type=\"textarea\" placeholder=\"请输入内容\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button type=\"primary\" @click=\"submitForm\">确 定</el-button>\r\n        <el-button @click=\"cancel\">取 消</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <!-- 分配角色数据权限对话框 -->\r\n    <el-dialog :title=\"title\" :visible.sync=\"openDataScope\" width=\"500px\" append-to-body>\r\n      <el-form :model=\"form\" label-width=\"80px\">\r\n        <el-form-item label=\"角色名称\">\r\n          <el-input v-model=\"form.roleName\" :disabled=\"true\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"权限字符\">\r\n          <el-input v-model=\"form.roleKey\" :disabled=\"true\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"权限范围\">\r\n          <el-select v-model=\"form.dataScope\" @change=\"dataScopeSelectChange\">\r\n            <el-option v-for=\"item in dataScopeOptions\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"数据权限\" v-show=\"form.dataScope == 2\">\r\n          <el-checkbox v-model=\"deptExpand\" @change=\"handleCheckedTreeExpand($event, 'dept')\">展开/折叠</el-checkbox>\r\n          <el-checkbox v-model=\"deptNodeAll\" @change=\"handleCheckedTreeNodeAll($event, 'dept')\">全选/全不选</el-checkbox>\r\n          <el-checkbox v-model=\"form.deptCheckStrictly\" @change=\"handleCheckedTreeConnect($event, 'dept')\">父子联动\r\n          </el-checkbox>\r\n          <el-tree class=\"tree-border\" :data=\"deptOptions\" show-checkbox default-expand-all ref=\"dept\" node-key=\"id\"\r\n            :check-strictly=\"!form.deptCheckStrictly\" empty-text=\"加载中，请稍后\" :props=\"defaultProps\"></el-tree>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button type=\"primary\" @click=\"submitDataScope\">确 定</el-button>\r\n        <el-button @click=\"cancelDataScope\">取 消</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import {\r\n    listRole,\r\n    getRole,\r\n    delRole,\r\n    addRole,\r\n    updateRole,\r\n    exportRole,\r\n    dataScope,\r\n    changeRoleStatus\r\n  } from \"@/api/system/role\";\r\n  import {\r\n    treeselect as menuTreeselect,\r\n    roleMenuTreeselect\r\n  } from \"@/api/system/menu\";\r\n  import {\r\n    treeselect as deptTreeselect,\r\n    roleDeptTreeselect\r\n  } from \"@/api/system/dept\";\r\n\r\n  export default {\r\n    name: \"Role\",\r\n    data() {\r\n      return {\r\n        // 遮罩层\r\n        loading: true,\r\n        // 导出遮罩层\r\n        exportLoading: false,\r\n        // 选中数组\r\n        ids: [],\r\n        // 非单个禁用\r\n        single: true,\r\n        // 非多个禁用\r\n        multiple: true,\r\n        // 显示搜索条件\r\n        showSearch: true,\r\n        // 总条数\r\n        total: 0,\r\n        // 角色表格数据\r\n        roleList: [],\r\n        // 弹出层标题\r\n        title: \"\",\r\n        // 是否显示弹出层\r\n        open: false,\r\n        // 是否显示弹出层（数据权限）\r\n        openDataScope: false,\r\n        menuExpand: false,\r\n        menuNodeAll: false,\r\n        deptExpand: true,\r\n        deptNodeAll: false,\r\n        // 日期范围\r\n        dateRange: [],\r\n        // 状态数据字典\r\n        statusOptions: [],\r\n        // 数据范围选项\r\n        dataScopeOptions: [{\r\n            value: \"1\",\r\n            label: \"全部数据权限\"\r\n          },\r\n          {\r\n            value: \"2\",\r\n            label: \"自定数据权限\"\r\n          },\r\n          {\r\n            value: \"3\",\r\n            label: \"本部门数据权限\"\r\n          },\r\n          {\r\n            value: \"4\",\r\n            label: \"本部门及以下数据权限\"\r\n          },\r\n          {\r\n            value: \"5\",\r\n            label: \"仅本人数据权限\"\r\n          }\r\n        ],\r\n        // 菜单列表\r\n        menuOptions: [],\r\n        // 部门列表\r\n        deptOptions: [],\r\n        // 查询参数\r\n        queryParams: {\r\n          pageNum: 1,\r\n          pageSize: 10,\r\n          roleName: undefined,\r\n          roleKey: undefined,\r\n          status: undefined\r\n        },\r\n        // 表单参数\r\n        form: {},\r\n        defaultProps: {\r\n          children: \"children\",\r\n          label: \"label\"\r\n        },\r\n        // 表单校验\r\n        rules: {\r\n          roleName: [{\r\n            required: true,\r\n            message: \"角色名称不能为空\",\r\n            trigger: \"blur\"\r\n          }],\r\n          roleKey: [{\r\n            required: true,\r\n            message: \"权限字符不能为空\",\r\n            trigger: \"blur\"\r\n          }],\r\n          roleSort: [{\r\n            required: true,\r\n            message: \"角色顺序不能为空\",\r\n            trigger: \"blur\"\r\n          }]\r\n        }\r\n      };\r\n    },\r\n    created() {\r\n      this.getList();\r\n      this.getDicts(\"sys_normal_disable\").then(response => {\r\n        this.statusOptions = response.data;\r\n      });\r\n    },\r\n    methods: {\r\n      /** 查询角色列表 */\r\n      getList() {\r\n        this.loading = true;\r\n        listRole(this.addDateRange(this.queryParams, this.dateRange)).then(\r\n          response => {\r\n            this.roleList = response.rows;\r\n            this.total = response.total;\r\n            this.loading = false;\r\n          }\r\n        );\r\n      },\r\n      /** 查询菜单树结构 */\r\n      getMenuTreeselect() {\r\n        menuTreeselect().then(response => {\r\n          this.menuOptions = response.data;\r\n        });\r\n      },\r\n      /** 查询部门树结构 */\r\n      getDeptTreeselect() {\r\n        deptTreeselect().then(response => {\r\n          this.deptOptions = response.data;\r\n        });\r\n      },\r\n      // 所有菜单节点数据\r\n      getMenuAllCheckedKeys() {\r\n        // 目前被选中的菜单节点\r\n        let checkedKeys = this.$refs.menu.getCheckedKeys();\r\n        // 半选中的菜单节点\r\n        let halfCheckedKeys = this.$refs.menu.getHalfCheckedKeys();\r\n        checkedKeys.unshift.apply(checkedKeys, halfCheckedKeys);\r\n        return checkedKeys;\r\n      },\r\n      // 所有部门节点数据\r\n      getDeptAllCheckedKeys() {\r\n        // 目前被选中的部门节点\r\n        let checkedKeys = this.$refs.dept.getCheckedKeys();\r\n        // 半选中的部门节点\r\n        let halfCheckedKeys = this.$refs.dept.getHalfCheckedKeys();\r\n        checkedKeys.unshift.apply(checkedKeys, halfCheckedKeys);\r\n        return checkedKeys;\r\n      },\r\n      /** 根据角色ID查询菜单树结构 */\r\n      getRoleMenuTreeselect(roleId) {\r\n        return roleMenuTreeselect(roleId).then(response => {\r\n          this.menuOptions = response.menus;\r\n          return response;\r\n        });\r\n      },\r\n      /** 根据角色ID查询部门树结构 */\r\n      getRoleDeptTreeselect(roleId) {\r\n        return roleDeptTreeselect(roleId).then(response => {\r\n          this.deptOptions = response.depts;\r\n          return response;\r\n        });\r\n      },\r\n      // 角色状态修改\r\n      handleStatusChange(row) {\r\n        let text = row.status === \"0\" ? \"启用\" : \"停用\";\r\n        this.$confirm('确认要\"' + text + '\"\"' + row.roleName + '\"角色吗?', \"警告\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        }).then(function() {\r\n          return changeRoleStatus(row.roleId, row.status);\r\n        }).then(() => {\r\n          this.msgSuccess(text + \"成功\");\r\n        }).catch(function() {\r\n          row.status = row.status === \"0\" ? \"1\" : \"0\";\r\n        });\r\n      },\r\n      // 取消按钮\r\n      cancel() {\r\n        this.open = false;\r\n        this.reset();\r\n      },\r\n      // 取消按钮（数据权限）\r\n      cancelDataScope() {\r\n        this.openDataScope = false;\r\n        this.reset();\r\n      },\r\n      // 表单重置\r\n      reset() {\r\n        if (this.$refs.menu != undefined) {\r\n          this.$refs.menu.setCheckedKeys([]);\r\n        }\r\n        this.menuExpand = false,\r\n          this.menuNodeAll = false,\r\n          this.deptExpand = true,\r\n          this.deptNodeAll = false,\r\n          this.form = {\r\n            roleId: undefined,\r\n            roleName: undefined,\r\n            roleKey: undefined,\r\n            roleSort: 0,\r\n            status: \"0\",\r\n            menuIds: [],\r\n            deptIds: [],\r\n            menuCheckStrictly: true,\r\n            deptCheckStrictly: true,\r\n            remark: undefined\r\n          };\r\n        this.resetForm(\"form\");\r\n      },\r\n      /** 搜索按钮操作 */\r\n      handleQuery() {\r\n        this.queryParams.pageNum = 1;\r\n        this.getList();\r\n      },\r\n      /** 重置按钮操作 */\r\n      resetQuery() {\r\n        this.dateRange = [];\r\n        this.resetForm(\"queryForm\");\r\n        this.handleQuery();\r\n      },\r\n      // 多选框选中数据\r\n      handleSelectionChange(selection) {\r\n        this.ids = selection.map(item => item.roleId)\r\n        this.single = selection.length != 1\r\n        this.multiple = !selection.length\r\n      },\r\n      // 更多操作触发\r\n      handleCommand(command, row) {\r\n        switch (command) {\r\n          case \"handleDataScope\":\r\n            this.handleDataScope(row);\r\n            break;\r\n          case \"handleAuthUser\":\r\n            this.handleAuthUser(row);\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      },\r\n      // 树权限（展开/折叠）\r\n      handleCheckedTreeExpand(value, type) {\r\n        if (type == 'menu') {\r\n          let treeList = this.menuOptions;\r\n          for (let i = 0; i < treeList.length; i++) {\r\n            this.$refs.menu.store.nodesMap[treeList[i].id].expanded = value;\r\n          }\r\n        } else if (type == 'dept') {\r\n          let treeList = this.deptOptions;\r\n          for (let i = 0; i < treeList.length; i++) {\r\n            this.$refs.dept.store.nodesMap[treeList[i].id].expanded = value;\r\n          }\r\n        }\r\n      },\r\n      // 树权限（全选/全不选）\r\n      handleCheckedTreeNodeAll(value, type) {\r\n        if (type == 'menu') {\r\n          this.$refs.menu.setCheckedNodes(value ? this.menuOptions : []);\r\n        } else if (type == 'dept') {\r\n          this.$refs.dept.setCheckedNodes(value ? this.deptOptions : []);\r\n        }\r\n      },\r\n      // 树权限（父子联动）\r\n      handleCheckedTreeConnect(value, type) {\r\n        if (type == 'menu') {\r\n          this.form.menuCheckStrictly = value ? true : false;\r\n        } else if (type == 'dept') {\r\n          this.form.deptCheckStrictly = value ? true : false;\r\n        }\r\n      },\r\n      /** 新增按钮操作 */\r\n      handleAdd() {\r\n        this.reset();\r\n        this.getMenuTreeselect();\r\n        this.open = true;\r\n        this.title = \"添加角色\";\r\n      },\r\n      /** 修改按钮操作 */\r\n      handleUpdate(row) {\r\n        this.reset();\r\n        const roleId = row.roleId || this.ids\r\n        const roleMenu = this.getRoleMenuTreeselect(roleId);\r\n        getRole(roleId).then(response => {\r\n          this.form = response.data;\r\n          this.open = true;\r\n          this.$nextTick(() => {\r\n            roleMenu.then(res => {\r\n              let checkedKeys = res.checkedKeys\r\n              checkedKeys.forEach((v) => {\r\n                this.$nextTick(() => {\r\n                  this.$refs.menu.setChecked(v, true, false);\r\n                })\r\n              })\r\n            });\r\n          });\r\n          this.title = \"修改角色\";\r\n        });\r\n      },\r\n      /** 选择角色权限范围触发 */\r\n      dataScopeSelectChange(value) {\r\n        if (value !== '2') {\r\n          this.$refs.dept.setCheckedKeys([]);\r\n        }\r\n      },\r\n      /** 分配数据权限操作 */\r\n      handleDataScope(row) {\r\n        this.reset();\r\n        const roleDeptTreeselect = this.getRoleDeptTreeselect(row.roleId);\r\n        getRole(row.roleId).then(response => {\r\n          this.form = response.data;\r\n          this.openDataScope = true;\r\n          this.$nextTick(() => {\r\n            roleDeptTreeselect.then(res => {\r\n              this.$refs.dept.setCheckedKeys(res.checkedKeys);\r\n            });\r\n          });\r\n          this.title = \"分配数据权限\";\r\n        });\r\n      },\r\n      /** 分配用户操作 */\r\n      handleAuthUser: function(row) {\r\n        const roleId = row.roleId;\r\n        this.$router.push(\"/auth/user/\" + roleId);\r\n      },\r\n      /** 提交按钮 */\r\n      submitForm: function() {\r\n        this.$refs[\"form\"].validate(valid => {\r\n          if (valid) {\r\n            if (this.form.roleId != undefined) {\r\n              this.form.menuIds = this.getMenuAllCheckedKeys();\r\n              updateRole(this.form).then(response => {\r\n                this.msgSuccess(\"修改成功\");\r\n                this.open = false;\r\n                this.getList();\r\n              });\r\n            } else {\r\n              this.form.menuIds = this.getMenuAllCheckedKeys();\r\n              addRole(this.form).then(response => {\r\n                this.msgSuccess(\"新增成功\");\r\n                this.open = false;\r\n                this.getList();\r\n              });\r\n            }\r\n          }\r\n        });\r\n      },\r\n      /** 提交按钮（数据权限） */\r\n      submitDataScope: function() {\r\n        if (this.form.roleId != undefined) {\r\n          this.form.deptIds = this.getDeptAllCheckedKeys();\r\n          dataScope(this.form).then(response => {\r\n            this.msgSuccess(\"修改成功\");\r\n            this.openDataScope = false;\r\n            this.getList();\r\n          });\r\n        }\r\n      },\r\n      /** 删除按钮操作 */\r\n      handleDelete(row) {\r\n        const roleIds = row.roleId || this.ids;\r\n        this.$confirm('是否确认删除角色编号为\"' + roleIds + '\"的数据项?', \"警告\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        }).then(function() {\r\n          return delRole(roleIds);\r\n        }).then(() => {\r\n          this.getList();\r\n          this.msgSuccess(\"删除成功\");\r\n        }).catch(() => {});\r\n      },\r\n      /** 导出按钮操作 */\r\n      handleExport() {\r\n        const queryParams = this.queryParams;\r\n        this.$confirm('是否确认导出所有角色数据项?', \"警告\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        }).then(() => {\r\n          this.exportLoading = true;\r\n          return exportRole(queryParams);\r\n        }).then(response => {\r\n          this.download(response.msg);\r\n          this.exportLoading = false;\r\n        }).catch(() => {});\r\n      }\r\n    }\r\n  };\r\n</script>\r\n<style scoped lang=\"scss\">\r\n  .content_left {\r\n    // height: 83vh;\r\n    overflow: auto;\r\n    box-shadow: 0 2px 12px 0 rgb(234, 234, 234);\r\n    padding: 20px 10px 20px 10px;\r\n    margin-bottom: 15px;\r\n  }\r\n\r\n  .top_search {\r\n    box-shadow: 0 2px 12px 0 rgb(234, 234, 234);\r\n    padding: 30px 0px 5px 0px;\r\n    margin-bottom: 15px;\r\n\r\n    .search_title {\r\n      color: #606266;\r\n      font-size: 15px;\r\n      margin: -15px 0 15px 0;\r\n      border-bottom: 1px dashed #eee;\r\n      padding-bottom: 10px;\r\n      padding-left: 30px;\r\n      display: flex;\r\n      align-items: center;\r\n    }\r\n  }\r\n\r\n  .middle_table {\r\n    box-shadow: 0 2px 12px 0 rgb(234, 234, 234);\r\n    padding: 20px 20px 30px 20px;\r\n\r\n    .table_btn {\r\n      width: 100%;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      padding: 5px 5px 20px 10px;\r\n\r\n      .table_title {\r\n        display: flex;\r\n        align-items: center;\r\n      }\r\n    }\r\n  }\r\n</style>\n"]}]}
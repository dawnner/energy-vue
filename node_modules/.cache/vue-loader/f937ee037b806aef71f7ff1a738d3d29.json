{"remainingRequest":"E:\\前端练习\\dian\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\前端练习\\dian\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\前端练习\\dian\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\前端练习\\dian\\src\\views\\basic\\photovoltaic\\index.vue?vue&type=template&id=69f50e74&scoped=true&","dependencies":[{"path":"E:\\前端练习\\dian\\src\\views\\basic\\photovoltaic\\index.vue","mtime":1636699498087},{"path":"E:\\前端练习\\dian\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636699536746},{"path":"E:\\前端练习\\dian\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1636699680482},{"path":"E:\\前端练习\\dian\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636699536746},{"path":"E:\\前端练习\\dian\\node_modules\\vue-loader\\lib\\index.js","mtime":1636699680472}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}